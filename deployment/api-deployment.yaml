apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -v
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -v
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: api
    spec:
      containers:
      - args:
        - gunicorn
        - -b
        - 0.0.0.0:5000
        - api:create_app()
        env:
        - name: APP_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              key: APP_ENVIRONMENT
              name: docker-env
        - name: DATA_LOCATION
          valueFrom:
            configMapKeyRef:
              key: DATA_LOCATION
              name: docker-env
        - name: FLASK_APP
          valueFrom:
            configMapKeyRef:
              key: FLASK_APP
              name: docker-env
        - name: FLASK_DEBUG
          valueFrom:
            configMapKeyRef:
              key: FLASK_DEBUG
              name: docker-env
        image: api
        imagePullPolicy: ""
        name: api
        ports:
        - containerPort: 5000
        resources: {}
        volumeMounts:
        - mountPath: /db
          name: data-volume
        workingDir: /app/
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: data-volume
status: {}
